import { NextResponse } from "next/server";
import { getRequestContext } from "@cloudflare/next-on-pages";
export const runtime="edge";
const db=()=> (getRequestContext().env).DB;
const idByHandle=async(h)=>{const r=await db().prepare("SELECT id FROM creators WHERE handle=?").bind(h).first();return r?.id??null};

export async function POST(req){try{const b=await req.json().catch(()=>({}));const follower=(b.follower_handle||"").trim();const following=(b.following_handle||"").trim();const action=(b.action||"").toLowerCase(); if(!follower||!following||!action) return NextResponse.json({ok:false,error:"missing fields"},{status:400}); const [fid,tid]=await Promise.all([idByHandle(follower),idByHandle(following)]); if(!fid||!tid) return NextResponse.json({ok:false,error:"unknown handle(s)"},{status:400}); if(fid===tid) return NextResponse.json({ok:false,error:"cannot follow self"},{status:400}); if(action==="follow"){const r=await db().prepare("INSERT OR IGNORE INTO follows (follower_id,following_id) VALUES (?,?)").bind(fid,tid).run();return NextResponse.json({ok:true,action:(r?.meta?.changes>0)?"followed":"already_following"})} if(action==="unfollow"){const r=await db().prepare("DELETE FROM follows WHERE follower_id=? AND following_id=?").bind(fid,tid).run();return NextResponse.json({ok:true,action:(r?.meta?.changes>0)?"unfollowed":"not_following"})} return NextResponse.json({ok:false,error:"invalid action"},{status:400})}catch(e){console.error("API /follow",e);return NextResponse.json({ok:false,error:e?.message??String(e)},{status:500})}}
