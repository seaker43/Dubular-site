import { kvGetJson } from "../../lib/kv"; import type { UserProfile } from "../../lib/types"; export const onRequestGet: PagesFunction<{ KV: KVNamespace }> = async (ctx) => { const url=new URL(ctx.request.url); const id=url.searchParams.get("id"); const handle=url.searchParams.get("handle"); const kv=ctx.env.KV; if(!id && !handle) return new Response("Missing id or handle",{status:400}); if(id){ const profile=await kvGetJson<UserProfile>(kv,`user:${id}`); return new Response(JSON.stringify(profile),{headers:{"content-type":"application/json"}});} const userId=await kv.get(`handle:${handle}`); if(!userId) return new Response("Not found",{status:404}); const profile=await kvGetJson<UserProfile>(kv,`user:${userId}`); return new Response(JSON.stringify(profile),{headers:{"content-type":"application/json"}}); };
