import { kvGetJson, kvPutJson } from "../../lib/kv"; import { normalizeHandle, isValidHandle } from "../../lib/handles"; import type { Channel } from "../../lib/types"; export const onRequestPost: PagesFunction<{ KV: KVNamespace }> = async (ctx) => { const kv=ctx.env.KV; const userId=ctx.request.headers.get("x-user-id"); if(!userId) return new Response("Unauthorized",{status:401}); const body=await ctx.request.json(); const now=Date.now(); const chHandle=normalizeHandle(body.handle||""); if(!isValidHandle(chHandle)) return new Response("Bad handle",{status:400}); const existingOwner=await kv.get(`channel-handle:${chHandle}`); const key=`channel:${userId}`; const current=await kvGetJson<Channel>(kv,key); if(existingOwner && existingOwner!==userId) return new Response("Channel handle taken",{status:409}); const updated:Channel={ id:key, ownerId:userId, handle:chHandle, title: body.title || current?.title || "", about: body.about ?? current?.about, bannerUrl: body.bannerUrl ?? current?.bannerUrl, avatarUrl: body.avatarUrl ?? current?.avatarUrl, category: body.category ?? current?.category, language: body.language ?? current?.language, isLive: current?.isLive ?? false, followers: current?.followers ?? 0, createdAt: current?.createdAt || now, updatedAt: now, }; await kvPutJson(kv,key,updated); await kv.put(`channel-handle:${chHandle}`,userId); return new Response(JSON.stringify(updated),{headers:{"content-type":"application/json"}}); };
