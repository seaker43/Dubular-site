export const onRequestDelete: PagesFunction<{ KV: KVNamespace }> = async (ctx) => { const kv=ctx.env.KV; const userId=ctx.request.headers.get("x-user-id"); if(!userId) return new Response("Unauthorized",{status:401}); const { channelId } = await ctx.request.json(); if(!channelId) return new Response("Missing channelId",{status:400}); const keyFollowers=`followers:${channelId}`; const keyFollowing=`following:${userId}`; const followers:string[]=JSON.parse((await kv.get(keyFollowers))||"[]"); const following:string[]=JSON.parse((await kv.get(keyFollowing))||"[]"); const nf=followers.filter(x=>x!==userId); const ng=following.filter(x=>x!==channelId); await kv.put(keyFollowers,JSON.stringify(nf)); await kv.put(keyFollowing,JSON.stringify(ng)); const ch=JSON.parse((await kv.get(channelId))||"null"); if(ch){ ch.followers=nf.length; await kv.put(channelId,JSON.stringify(ch)); } return new Response(JSON.stringify({ok:true,followers:nf.length}),{headers:{"content-type":"application/json"}}); };
